// –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å webhook –≤ Telegram
const https = require('https');

const botToken = '7725254943:AAGHFlrj2oDfLxjrNaWjYuJ_nhUlgr2qLZU';

console.log('üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å webhook –≤ Telegram...');
console.log('ü§ñ –¢–æ–∫–µ–Ω –±–æ—Ç–∞:', botToken);

const options = {
  hostname: 'api.telegram.org',
  port: 443,
  path: `/bot${botToken}/getWebhookInfo`,
  method: 'GET'
};

const req = https.request(options, (res) => {
  console.log(`üìä –°—Ç–∞—Ç—É—Å: ${res.statusCode}`);
  
  let data = '';
  res.on('data', (chunk) => {
    data += chunk;
  });
  
  res.on('end', () => {
    console.log('üìã –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ webhook:', data);
    
    try {
      const webhookInfo = JSON.parse(data);
      if (webhookInfo.ok) {
        console.log('üéØ Webhook URL:', webhookInfo.result.url);
        console.log('üìä Pending updates:', webhookInfo.result.pending_update_count);
        console.log('üîó Has custom certificate:', webhookInfo.result.has_custom_certificate);
        console.log('üåê IP address:', webhookInfo.result.ip_address);
        
        if (webhookInfo.result.last_error_date) {
          console.log('‚ö†Ô∏è –ü–æ—Å–ª–µ–¥–Ω—è—è –æ—à–∏–±–∫–∞ –¥–∞—Ç–∞:', new Date(webhookInfo.result.last_error_date * 1000));
        }
        
        if (webhookInfo.result.last_error_message) {
          console.log('‚ùå –ü–æ—Å–ª–µ–¥–Ω—è—è –æ—à–∏–±–∫–∞:', webhookInfo.result.last_error_message);
        }
        
        if (webhookInfo.result.last_error_date && webhookInfo.result.last_error_message) {
          console.log('üö® –ü–†–û–ë–õ–ï–ú–ê: Webhook –∏–º–µ–µ—Ç –æ—à–∏–±–∫–∏!');
        } else {
          console.log('‚úÖ Webhook —Ä–∞–±–æ—Ç–∞–µ—Ç –±–µ–∑ –æ—à–∏–±–æ–∫');
        }
      } else {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ webhook:', webhookInfo.description);
      }
    } catch (e) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ –æ—Ç–≤–µ—Ç–∞:', e.message);
    }
  });
});

req.on('error', (err) => {
  console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞:', err.message);
});

req.end();


