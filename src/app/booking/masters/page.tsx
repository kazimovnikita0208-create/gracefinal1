'use client';

import React, { useState, useEffect, useCallback } from 'react';
import { useRouter, useSearchParams } from 'next/navigation';
import Layout from '@/components/layout/Layout';
import Card from '@/components/ui/Card';
import { NeonButton } from '@/components/ui/neon-button';
import { MasterCard } from '@/components/ui';
import { Master } from '@/types';
import { api, mockData } from '@/lib/api';
import { useTelegram } from '@/hooks/useTelegram';
import { useApiCache } from '@/hooks/useApiCache';
import { LoadingSpinner } from '@/components/ui/LoadingSpinner';
import { formatPrice } from '@/lib/utils';

export default function MastersPage() {
  const [selectedMaster, setSelectedMaster] = useState<Master | null>(null);
  const [selectedServices, setSelectedServices] = useState<number[]>([]);
  const [selectedDateTime, setSelectedDateTime] = useState<{date: string, time: string} | null>(null);
  const router = useRouter();
  const searchParams = useSearchParams();
  const { hapticFeedback, mainButton } = useTelegram();

  // –ö—ç—à–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ –º–∞—Å—Ç–µ—Ä–æ–≤
  const { data: mastersResponse, loading, error } = useApiCache(
    'masters',
    () => api.getMasters(),
    { ttl: 5 * 60 * 1000 } // 5 –º–∏–Ω—É—Ç –∫—ç—à
  );
  
  const masters = mastersResponse?.data || [];

  // –§—É–Ω–∫—Ü–∏–∏ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –æ–±—ä—è–≤–ª–µ–Ω—ã –¥–æ useEffect
  const handleContinue = useCallback(() => {
    if (selectedMaster) {
      hapticFeedback.impact('medium');
      if (selectedServices.length > 0) {
        // –ï—Å–ª–∏ –µ—Å—Ç—å –≤—ã–±—Ä–∞–Ω–Ω—ã–µ —É—Å–ª—É–≥–∏, –ø–µ—Ä–µ—Ö–æ–¥–∏–º –∫ –≤—ã–±–æ—Ä—É –≤—Ä–µ–º–µ–Ω–∏
        const serviceIds = selectedServices.join(',');
        router.push(`/booking/masters/${selectedMaster.id}/services/${serviceIds}/time`);
      } else if (selectedDateTime) {
        // –ï—Å–ª–∏ –µ—Å—Ç—å –≤—ã–±—Ä–∞–Ω–Ω–æ–µ –≤—Ä–µ–º—è, –ø–µ—Ä–µ—Ö–æ–¥–∏–º –∫ –≤—ã–±–æ—Ä—É —É—Å–ª—É–≥
        router.push(`/booking/services?masterId=${selectedMaster.id}&masterName=${encodeURIComponent(selectedMaster.name)}&date=${selectedDateTime.date}&time=${selectedDateTime.time}`);
      } else {
        // –û–±—ã—á–Ω—ã–π –ø–µ—Ä–µ—Ö–æ–¥ –∫ –≤—ã–±–æ—Ä—É —É—Å–ª—É–≥
        router.push(`/booking/masters/${selectedMaster.id}/services`);
      }
    }
  }, [selectedMaster, selectedServices, selectedDateTime, hapticFeedback, router]);


  const handleMasterSelect = (master: Master) => {
    hapticFeedback.impact('light');
    setSelectedMaster(master);
    hapticFeedback.notification('success');
  };

  // –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –º–∞—Å—Ç–µ—Ä–æ–≤ –ø–æ —É—Å–ª—É–≥–∞–º –∏ –≤—Ä–µ–º–µ–Ω–∏
  const getFilteredMasters = () => {
    let filtered = masters || [];

    // –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ø–æ —É—Å–ª—É–≥–∞–º - –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–æ–ª—å–∫–æ –º–∞—Å—Ç–µ—Ä–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–≥—É—Ç –≤—ã–ø–æ–ª–Ω–∏—Ç—å –≤—ã–±—Ä–∞–Ω–Ω—ã–µ —É—Å–ª—É–≥–∏
    if (selectedServices.length > 0) {
      filtered = filtered.filter(master => {
        return selectedServices.every(serviceId => {
          const service = mockData.services.find(s => s.id === serviceId);
          if (!service) return false;
          
          // –õ–æ–≥–∏–∫–∞ —Å–æ–ø–æ—Å—Ç–∞–≤–ª–µ–Ω–∏—è —É—Å–ª—É–≥ –∏ —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–π –º–∞—Å—Ç–µ—Ä–æ–≤
          const serviceName = service.name.toLowerCase();
          const masterSpecialization = master.specialization.toLowerCase();
          
          // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –º–æ–∂–µ—Ç –ª–∏ –º–∞—Å—Ç–µ—Ä –≤—ã–ø–æ–ª–Ω–∏—Ç—å —ç—Ç—É —É—Å–ª—É–≥—É
          if (serviceName.includes('–º–∞–Ω–∏–∫—é—Ä') && masterSpecialization.includes('–º–∞–Ω–∏–∫—é—Ä')) {
            return true;
          }
          if (serviceName.includes('–ø–µ–¥–∏–∫—é—Ä') && masterSpecialization.includes('–ø–µ–¥–∏–∫—é—Ä')) {
            return true;
          }
          if (serviceName.includes('—Å—Ç—Ä–∏–∂–∫–∞') && masterSpecialization.includes('–ø–∞—Ä–∏–∫–º–∞—Ö–µ—Ä')) {
            return true;
          }
          if (serviceName.includes('–±—Ä–æ–≤') && masterSpecialization.includes('–±—Ä–æ–≤')) {
            return true;
          }
          if (serviceName.includes('—Ä–µ—Å–Ω–∏—Ü') && masterSpecialization.includes('—Ä–µ—Å–Ω–∏—Ü')) {
            return true;
          }
          if (serviceName.includes('–ª–∏—Ü') && masterSpecialization.includes('–∫–æ—Å–º–µ—Ç–æ–ª–æ–≥')) {
            return true;
          }
          
          return false;
        });
      });
    }

    // –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ø–æ –≤—Ä–µ–º–µ–Ω–∏ (–ø—Ä–æ—Å—Ç–∞—è –ª–æ–≥–∏–∫–∞ - –º–∞—Å—Ç–µ—Ä —Å–≤–æ–±–æ–¥–µ–Ω –≤ –≤—ã–±—Ä–∞–Ω–Ω–æ–µ –≤—Ä–µ–º—è)
    if (selectedDateTime) {
      filtered = filtered.filter(master => {
        // –ú–æ–∫–æ–≤–∞—è –ª–æ–≥–∏–∫–∞: –º–∞—Å—Ç–µ—Ä —Å–≤–æ–±–æ–¥–µ–Ω –≤ 70% —Å–ª—É—á–∞–µ–≤
        const hash = master.id + selectedDateTime.date + selectedDateTime.time;
        return hash.length % 3 !== 0; // –ü—Ä–æ—Å—Ç–∞—è –ª–æ–≥–∏–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏
      });
    }

    return filtered;
  };

  // useEffect hooks –ø–æ—Å–ª–µ –æ–±—ä—è–≤–ª–µ–Ω–∏—è —Ñ—É–Ω–∫—Ü–∏–π
  useEffect(() => {
    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ URL
    const servicesParam = searchParams?.get('services');
    const dateParam = searchParams?.get('date');
    const timeParam = searchParams?.get('time');
    
    console.log('URL –ø–∞—Ä–∞–º–µ—Ç—Ä—ã:', { servicesParam, dateParam, timeParam });
    
    if (servicesParam) {
      const serviceIds = servicesParam.split(',').map(id => parseInt(id)).filter(id => !isNaN(id));
      console.log('–í—ã–±—Ä–∞–Ω–Ω—ã–µ —É—Å–ª—É–≥–∏:', serviceIds);
      setSelectedServices(serviceIds);
    }
    
    if (dateParam && timeParam) {
      console.log('–í—ã–±—Ä–∞–Ω–Ω–æ–µ –≤—Ä–µ–º—è:', { date: dateParam, time: timeParam });
      setSelectedDateTime({ date: dateParam, time: timeParam });
    }
  }, [searchParams]);

  useEffect(() => {
    if (selectedMaster) {
      mainButton.setText('–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å');
      mainButton.show();
      mainButton.onClick(handleContinue);
    } else {
      mainButton.hide();
    }

    return () => {
      mainButton.offClick(handleContinue);
    };
  }, [selectedMaster, mainButton, handleContinue]);

  if (loading) {
    return (
      <Layout title="–í—ã–±–æ—Ä –º–∞—Å—Ç–µ—Ä–∞">
        <div className="container mx-auto max-w-sm">
          <div className="flex justify-center items-center py-20">
            <LoadingSpinner size="lg" text="–ó–∞–≥—Ä—É–∂–∞–µ–º –º–∞—Å—Ç–µ—Ä–æ–≤..." />
          </div>
        </div>
      </Layout>
    );
  }

  return (
    <Layout 
      title="–í—ã–±–æ—Ä –º–∞—Å—Ç–µ—Ä–∞"
      showBackButton={true}
      backButtonHref="/booking"
    >
      <div className="container mx-auto max-w-sm pb-20">
        {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
        <div className="text-center mb-6 animate-fade-in">
          <h1 className="text-2xl font-bold text-white mb-2 drop-shadow-sm">
            –í—ã–±–µ—Ä–∏—Ç–µ –º–∞—Å—Ç–µ—Ä–∞
          </h1>
          <p className="text-white/80">
            {selectedServices.length > 0 
              ? `–î–ª—è –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö —É—Å–ª—É–≥ (${selectedServices.length})`
              : '–®–∞–≥ 1 –∏–∑ 3 ‚Ä¢ –í—ã–±–µ—Ä–∏—Ç–µ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–∞'
            }
          </p>
          {/* –û—Ç–ª–∞–¥–æ—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è */}
          <div className="mt-2 text-xs text-white/60">
            –ó–∞–≥—Ä—É–∂–µ–Ω–æ –º–∞—Å—Ç–µ—Ä–æ–≤: {masters.length}, –û—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞–Ω–æ: {getFilteredMasters().length}
          </div>
        </div>

        {/* –í—ã–±—Ä–∞–Ω–Ω—ã–µ —É—Å–ª—É–≥–∏ */}
        {selectedServices.length > 0 && (
          <div className="bg-primary-500/20 border border-primary-400/30 rounded-xl p-4 mb-6">
            <h4 className="font-semibold text-white mb-3 drop-shadow-sm">
              ‚úÖ –í—ã–±—Ä–∞–Ω–Ω—ã–µ —É—Å–ª—É–≥–∏
            </h4>
            <div className="space-y-2">
              {selectedServices.map(serviceId => {
                // –ó–¥–µ—Å—å –Ω—É–∂–Ω–æ –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± —É—Å–ª—É–≥–µ –ø–æ ID
                const service = mockData.services.find(s => s.id === serviceId);
                if (!service) return null;
                return (
                  <div key={serviceId} className="flex items-center justify-between text-sm">
                    <span className="text-white">{service.name}</span>
                    <span className="text-green-400 font-medium">{formatPrice(service.price)}</span>
                  </div>
                );
              })}
            </div>
          </div>
        )}

        {/* –í—ã–±—Ä–∞–Ω–Ω–æ–µ –≤—Ä–µ–º—è */}
        {selectedDateTime && (
          <div className="bg-blue-500/20 border border-blue-400/30 rounded-xl p-4 mb-6">
            <h4 className="font-semibold text-white mb-3 drop-shadow-sm">
              ‚è∞ –í—ã–±—Ä–∞–Ω–Ω–æ–µ –≤—Ä–µ–º—è
            </h4>
            <div className="space-y-2">
              <div className="flex items-center justify-between">
                <span className="text-white/80">–î–∞—Ç–∞:</span>
                <span className="font-semibold text-white">
                  {new Date(selectedDateTime.date).toLocaleDateString('ru-RU', {
                    weekday: 'long',
                    day: 'numeric',
                    month: 'long'
                  })}
                </span>
              </div>
              <div className="flex items-center justify-between">
                <span className="text-white/80">–í—Ä–µ–º—è:</span>
                <span className="font-semibold text-white">{selectedDateTime.time}</span>
              </div>
            </div>
          </div>
        )}

        {/* –°–ø–∏—Å–æ–∫ –º–∞—Å—Ç–µ—Ä–æ–≤ */}
        <div className="space-y-3">
          {getFilteredMasters().length === 0 ? (
            <div className="text-center py-8">
              <div className="text-4xl mb-3">üë•</div>
              <h3 className="text-lg font-semibold text-white mb-2 drop-shadow-sm">
                –ú–∞—Å—Ç–µ—Ä–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã
              </h3>
              <p className="text-white/70">
                –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –≤—ã–±—Ä–∞—Ç—å –¥—Ä—É–≥—É—é —É—Å–ª—É–≥—É –∏–ª–∏ –≤—Ä–µ–º—è
              </p>
            </div>
          ) : (
            getFilteredMasters().map((master, index) => (
              <MasterCard
                key={master.id}
                master={master}
                isSelected={selectedMaster?.id === master.id}
                onClick={() => handleMasterSelect(master)}
                className="animate-slide-up"
              />
            ))
          )}
        </div>

        {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è */}
        <div className="mt-8 p-4 bg-white/10 backdrop-blur-sm rounded-xl animate-fade-in border border-white/20">
          <div className="flex items-start space-x-3">
            <div className="text-blue-400 mt-0.5">
              <svg className="w-5 h-5" fill="currentColor" viewBox="0 0 20 20">
                <path fillRule="evenodd" d="M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z" clipRule="evenodd" />
              </svg>
            </div>
            <div>
              <h4 className="font-medium text-white">–°–æ–≤–µ—Ç</h4>
              <p className="text-sm text-white/80 mt-1">
                –ö–∞–∂–¥—ã–π –º–∞—Å—Ç–µ—Ä —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç—Å—è –Ω–∞ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã—Ö —É—Å–ª—É–≥–∞—Ö. 
                –ü–æ—Å–ª–µ –≤—ã–±–æ—Ä–∞ –º–∞—Å—Ç–µ—Ä–∞ –≤—ã —É–≤–∏–¥–∏—Ç–µ –¥–æ—Å—Ç—É–ø–Ω—ã–µ –ø—Ä–æ—Ü–µ–¥—É—Ä—ã.
              </p>
            </div>
          </div>
        </div>

        {/* –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è –¥–ª—è –º–æ–±–∏–ª—å–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤ –±–µ–∑ Telegram */}
        {selectedMaster && (
          <div className="fixed bottom-4 left-4 right-4 z-40 animate-slide-up">
            <NeonButton
              onClick={handleContinue}
              variant="salon"
              size="xl"
              className="w-full py-4 font-semibold text-lg hover:scale-105 active:scale-95 transition-all duration-300 shadow-2xl"
            >
              {selectedDateTime 
                ? `–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –∫ –≤—ã–±–æ—Ä—É —É—Å–ª—É–≥ —Å ${selectedMaster.name.split(' ')[0]} ‚ú®`
                : `–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å —Å ${selectedMaster.name.split(' ')[0]} ‚ú®`
              }
            </NeonButton>
          </div>
        )}
      </div>
    </Layout>
  );
}
