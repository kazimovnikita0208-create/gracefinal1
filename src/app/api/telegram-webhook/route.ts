import { NextRequest, NextResponse } from 'next/server';

export async function POST(request: NextRequest) {
  try {
    const body = await request.json();
    
    // –õ–æ–≥–∏—Ä—É–µ–º –ø–æ–ª—É—á–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
    console.log('üì® –ü–æ–ª—É—á–µ–Ω webhook –æ—Ç Telegram:', JSON.stringify(body, null, 2));
    
    // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Ä–∞–∑–ª–∏—á–Ω—ã–µ —Ç–∏–ø—ã –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π
    if (body.message) {
      const message = body.message;
      console.log('üí¨ –°–æ–æ–±—â–µ–Ω–∏–µ:', message.text);
      
      // –ü—Ä–æ—Å—Ç–æ–π –æ—Ç–≤–µ—Ç –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏—è
      if (message.text === '/start') {
        return NextResponse.json({
          method: 'sendMessage',
          chat_id: message.chat.id,
          text: 'üåü –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ Grace Beauty Salon!\n\n‚ú® –ú—ã –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º:\n‚Ä¢ –ú–∞–Ω–∏–∫—é—Ä –∏ –ø–µ–¥–∏–∫—é—Ä\n‚Ä¢ –ú–∞—Å—Å–∞–∂ –∏ SPA\n‚Ä¢ –ö–æ—Å–º–µ—Ç–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–µ —É—Å–ª—É–≥–∏\n‚Ä¢ –ù–æ–≥—Ç–µ–≤–æ–π –¥–∏–∑–∞–π–Ω\n\nüì± –ù–∞–∂–º–∏—Ç–µ /app —á—Ç–æ–±—ã –æ—Ç–∫—Ä—ã—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è –∑–∞–ø–∏—Å–∏!'
        });
      }
      
      if (message.text === '/app') {
        const webAppUrl = process.env.VERCEL_URL 
          ? `https://${process.env.VERCEL_URL}` 
          : 'https://gracefinal1.vercel.app';
          
        return NextResponse.json({
          method: 'sendMessage',
          chat_id: message.chat.id,
          text: 'üì± –û—Ç–∫—Ä—ã–≤–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è –∑–∞–ø–∏—Å–∏...',
          reply_markup: {
            inline_keyboard: [
              [
                {
                  text: 'üåü –ó–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ —É—Å–ª—É–≥—É',
                  web_app: { url: webAppUrl }
                }
              ]
            ]
          }
        });
      }
      
      if (message.text === '/help') {
        return NextResponse.json({
          method: 'sendMessage',
          chat_id: message.chat.id,
          text: 'üÜò –ü–æ–º–æ—â—å –ø–æ –±–æ—Ç—É:\n\n/start - –ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É —Å –±–æ—Ç–æ–º\n/app - –û—Ç–∫—Ä—ã—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è –∑–∞–ø–∏—Å–∏\n/help - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É\n\nüí¨ –ü–æ –≤–æ–ø—Ä–æ—Å–∞–º –∑–≤–æ–Ω–∏—Ç–µ: +7 (XXX) XXX-XX-XX'
        });
      }
      
      // –û—Ç–≤–µ—Ç –Ω–∞ –ª—é–±–æ–µ –¥—Ä—É–≥–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
      return NextResponse.json({
        method: 'sendMessage',
        chat_id: message.chat.id,
        text: 'üëã –°–ø–∞—Å–∏–±–æ –∑–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ!\n\n–î–ª—è –∑–∞–ø–∏—Å–∏ –Ω–∞ —É—Å–ª—É–≥—É –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /app\n–ò–ª–∏ –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ:',
        reply_markup: {
          inline_keyboard: [
            [
              {
                text: 'üì± –û—Ç–∫—Ä—ã—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ',
                web_app: { url: process.env.VERCEL_URL ? `https://${process.env.VERCEL_URL}` : 'https://gracefinal1.vercel.app' }
              }
            ]
          ]
        }
      });
    }
    
    // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º callback_query (–Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫–∏)
    if (body.callback_query) {
      const callback = body.callback_query;
      console.log('üîò Callback query:', callback.data);
      
      return NextResponse.json({
        method: 'answerCallbackQuery',
        callback_query_id: callback.id,
        text: '‚úÖ –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ!'
      });
    }
    
    return NextResponse.json({ success: true });
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ webhook:', error);
    return NextResponse.json({ error: 'Internal Server Error' }, { status: 500 });
  }
}

export async function GET() {
  return NextResponse.json({ 
    status: 'ok', 
    message: 'Telegram webhook endpoint is running',
    timestamp: new Date().toISOString()
  });
}
