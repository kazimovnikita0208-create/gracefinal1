// –ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç–æ–≤—ã–π webhook –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏
export default async function handler(req, res) {
  console.log('üß™ TEST WEBHOOK: –ü–æ–ª—É—á–µ–Ω –∑–∞–ø—Ä–æ—Å', req.method, req.url);
  console.log('üß™ TEST WEBHOOK: Headers:', JSON.stringify(req.headers, null, 2));
  console.log('üß™ TEST WEBHOOK: Body:', JSON.stringify(req.body, null, 2));
  console.log('üß™ TEST WEBHOOK: Bot token exists:', !!process.env.TELEGRAM_BOT_TOKEN);
  
  // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º CORS –∑–∞–≥–æ–ª–æ–≤–∫–∏
  res.setHeader('Access-Control-Allow-Origin', '*');
  res.setHeader('Access-Control-Allow-Methods', 'GET, POST, OPTIONS');
  res.setHeader('Access-Control-Allow-Headers', 'Content-Type');

  if (req.method === 'OPTIONS') {
    res.status(200).end();
    return;
  }

  if (req.method !== 'POST') {
    res.status(405).json({ error: 'Method not allowed' });
    return;
  }

  try {
    console.log('üß™ TEST WEBHOOK: –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º POST –∑–∞–ø—Ä–æ—Å...');
    
    const botToken = process.env.TELEGRAM_BOT_TOKEN;
    if (!botToken) {
      console.error('‚ùå TEST WEBHOOK: TELEGRAM_BOT_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω');
      res.status(500).json({ error: 'Bot token not found' });
      return;
    }
    
    // –ü—Ä–æ—Å—Ç–æ–π –æ—Ç–≤–µ—Ç –Ω–∞ –ª—é–±–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    if (req.body.message) {
      const message = req.body.message;
      console.log('üí¨ TEST WEBHOOK: –ù–∞–π–¥–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ:', message.text);
      console.log('üí¨ TEST WEBHOOK: –û—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', message.from.first_name);
      
      const responseText = `üß™ TEST: –ü–æ–ª—É—á–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ "${message.text}" –æ—Ç ${message.from.first_name}`;
      
      console.log('üì§ TEST WEBHOOK: –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç –≤ Telegram...');
      
      const telegramResponse = await fetch(`https://api.telegram.org/bot${botToken}/sendMessage`, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({
          chat_id: message.chat.id,
          text: responseText
        })
      });
      
      const telegramResult = await telegramResponse.json();
      console.log('üì§ TEST WEBHOOK: –û—Ç–≤–µ—Ç –æ—Ç Telegram API:', JSON.stringify(telegramResult, null, 2));
      
      if (telegramResult.ok) {
        console.log('‚úÖ TEST WEBHOOK: –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!');
        res.status(200).json({ success: true, telegramResult });
      } else {
        console.error('‚ùå TEST WEBHOOK: –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è:', telegramResult);
        res.status(500).json({ error: 'Failed to send message', details: telegramResult });
      }
    } else {
      console.log('üß™ TEST WEBHOOK: –°–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –≤ —Ç–µ–ª–µ –∑–∞–ø—Ä–æ—Å–∞');
      res.status(200).json({ success: true, message: 'No message found' });
    }
    
  } catch (error) {
    console.error('‚ùå TEST WEBHOOK: –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ webhook:', error);
    res.status(500).json({ error: 'Internal Server Error', details: error.message });
  }
}