// –°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ API –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
const https = require('https');

// –¢–µ—Å—Ç–∏—Ä—É–µ–º API endpoint –¥–ª—è –º–∞—Å—Ç–µ—Ä–æ–≤
const options = {
  hostname: 'gracefinal-m0ntsp5m9-nikitas-projects-1742d776.vercel.app',
  port: 443,
  path: '/api/masters',
  method: 'GET',
  headers: {
    'Content-Type': 'application/json',
  }
};

console.log('üîç –¢–µ—Å—Ç–∏—Ä—É–µ–º API endpoint –¥–ª—è –º–∞—Å—Ç–µ—Ä–æ–≤...');
console.log('üåê URL:', `https://${options.hostname}${options.path}`);

const req = https.request(options, (res) => {
  console.log('üìä –°—Ç–∞—Ç—É—Å:', res.statusCode);
  console.log('üìã –ó–∞–≥–æ–ª–æ–≤–∫–∏:', res.headers);
  
  let data = '';
  res.on('data', (chunk) => {
    data += chunk;
  });
  
  res.on('end', () => {
    try {
      const response = JSON.parse(data);
      console.log('‚úÖ –û—Ç–≤–µ—Ç –ø–æ–ª—É—á–µ–Ω!');
      console.log('üìä –£—Å–ø–µ—Ö:', response.success);
      
      if (response.data) {
        console.log('üìä –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –º–∞—Å—Ç–µ—Ä–æ–≤:', response.data.length);
        console.log('üìã –ü–µ—Ä–≤—ã–π –º–∞—Å—Ç–µ—Ä:', response.data[0]?.name || '–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö');
      } else {
        console.log('‚ùå –î–∞–Ω–Ω—ã–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç');
      }
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ –æ—Ç–≤–µ—Ç–∞:', error);
      console.log('üìã –°—ã—Ä–æ–π –æ—Ç–≤–µ—Ç:', data);
    }
  });
});

req.on('error', (err) => {
  console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞:', err);
});

req.end();