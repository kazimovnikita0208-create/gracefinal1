// –¢–µ—Å—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –Ω–∞ Vercel
const API_BASE_URL = 'https://gracefinal1.vercel.app/api';

async function testVercelDatabase() {
  console.log('üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –Ω–∞ Vercel...\n');

  try {
    // –¢–µ—Å—Ç 1: Health endpoint
    console.log('1Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä—É–µ–º health endpoint...');
    const healthResponse = await fetch(`${API_BASE_URL}/health`);
    const healthData = await healthResponse.json();
    console.log('üìã Health response:', healthData);

    if (healthData.success) {
      console.log('‚úÖ API —Ä–∞–±–æ—Ç–∞–µ—Ç!');
    } else {
      console.log('‚ùå API –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç:', healthData);
    }

    console.log('\n' + '='.repeat(50) + '\n');

    // –¢–µ—Å—Ç 2: –ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    console.log('2Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä—É–µ–º –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...');
    const testUser = {
      telegramId: 123456789,
      firstName: '–¢–µ—Å—Ç–æ–≤—ã–π',
      lastName: '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å',
      username: 'test_user'
    };

    const authResponse = await fetch(`${API_BASE_URL}/users/auth`, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify(testUser)
    });

    const authData = await authResponse.json();
    console.log('üìã –†–µ–∑—É–ª—å—Ç–∞—Ç –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏:', authData);

    if (authData.success) {
      console.log('‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É—Å–ø–µ—à–Ω–æ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω!');
      console.log('üë§ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', authData.data.id);
    } else {
      console.log('‚ùå –û—à–∏–±–∫–∞ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏:', authData.error);
    }

    console.log('\n' + '='.repeat(50) + '\n');

    // –¢–µ—Å—Ç 3: –ü–æ–ª—É—á–µ–Ω–∏–µ –º–∞—Å—Ç–µ—Ä–æ–≤
    console.log('3Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ –º–∞—Å—Ç–µ—Ä–æ–≤...');
    const mastersResponse = await fetch(`${API_BASE_URL}/masters`);
    const mastersData = await mastersResponse.json();
    console.log('üìã –†–µ–∑—É–ª—å—Ç–∞—Ç –ø–æ–ª—É—á–µ–Ω–∏—è –º–∞—Å—Ç–µ—Ä–æ–≤:', mastersData);

    if (mastersData.success) {
      console.log('‚úÖ –ú–∞—Å—Ç–µ—Ä–∞ –∑–∞–≥—Ä—É–∂–µ–Ω—ã!');
      console.log('üë• –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –º–∞—Å—Ç–µ—Ä–æ–≤:', mastersData.data.length);
    } else {
      console.log('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –º–∞—Å—Ç–µ—Ä–æ–≤:', mastersData.error);
    }

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:', error.message);
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç
testVercelDatabase();
